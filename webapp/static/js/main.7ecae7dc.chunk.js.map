{"version":3,"sources":["App.js","utils/utils.js","utils/config.js","axios/index.js","components/Headers/index.js","components/Footer/index.js","config/menuConfig.js","components/NavLeft/index.js","main.js","page/login/index.js","page/home/index.js","page/ui/buttons/index.js","page/nomatch/index.js","page/ui/models/index.js","page/ui/loadings/index.js","page/ui/notice/index.js","page/ui/message/index.js","page/ui/tabs/index.js","page/form/login.js","page/form/register.js","page/table/basicTable.js","router.js","serviceWorker.js","index.js"],"names":["App","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","children","React","Component","utils","time","supplementZero","dataTime","data","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","config","Axios","option","Promise","resolve","reject","JsonP","url","param","err","response","console","log","status","Axio","method","baseURL","timeout","params","then","res","code","modal","info","title","content","msg","Headers","Props","_this","state","setState","userName","timer","setInterval","sysTime","Util","getTime","getWeatherAPIDate","clearInterval","axios","jsonp","concat","encodeURIComponent","results","weather_data","weatherDetail","weather","temperature","dayPictureUrl","row","col","span","NavLink","to","src","alt","Footer","menuList","key","btnList","SubMenu","menu","NavLft","renderMenu","map","item","Item","handleClick","e","MenuTreeNode","MenuConfig","theme","Main","NavLeft_NavLft","Headers_Headers","Footer_Footer","Login","Home","Buttons","loading","buttonSize","noLoading","YeLoading","onChangeButtonSize","target","value","card","es_button","type","disabled","icon","shape","onClick","Group","es_radio","onChange","size","NoMatch","Models","showModel1","showModel2","showModel3","showModel4","handleOpen","defineProperty","handleConfirm","okText","okType","okButtonProps","cancelText","onOk","onCancel","_this2","visible","style","top","Loadings","es_icon","spin","indicator","spinning","tip","es_alert","message","description","NoTice","openNotice","placement","notification","Message","openMessage","TabPane","tabs","Tabss","tabList","id","callback","ActiveKey","defaultActiveKey","tab","FormLogin","handlSubmit","form","getFieldsValue","validateFields","values","error","success","getFieldDecorator","es_form","layout","input","placeholder","width","initialValue","rules","required","pattern","prefix","valuePropName","es_checkbox","float","form_login","create","FormItem","FromRegister","handleSubmit","getBase64","img","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJPG","isLt2M","handleBeforeUpload","assertThisInitialized","originFileObj","imageUrl","formItemLayout","labelCol","xs","sm","wrapperCol","tailFormItemLayout","offset","uploadButton","assign","label","input_number","es_select","Option","mode","es_switch","moment","date_picker","showTime","format","TextArea","autosize","minRows","time_picker","upload","name","listType","showUploadList","action","register","Tables","getList","that","ajax","list","index","dataSourceList","onRowClick","record","selectedRowKeys","selectdeItem","onSelectChange","onSelect1","dataSource","age","address","columns","dataIndex","render","rowSelection","rowSelectionA","table","pagination","onRow","onSelect","IRouter","HashRouter","App_App","Switch","Route","path","component","main_Main","Boolean","window","location","hostname","match","ReactDOM","router_IRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ecae7dc.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport \"antd/dist/antd.less\";   // 引入官方提供的 less 样式入口文件\n\nexport default class App extends React.Component {\n  constructor (props) {\n    super()\n  }\n  // render 使用\n  render() {\n    return (\n      <div className=\"App\">\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","export default {\n    formateDate(time){ // 时间戳转化时间\n        if(!time) return '';\n        function supplementZero(dataTime){ //补零\n            if (dataTime<10){\n                return '0' + dataTime\n            }\n            return dataTime\n        }\n        let data     = new Date(time)\n        let dataTime = data.getFullYear() + '-'+  //年\n        supplementZero(data.getMonth()+1) + '-'+ //月\n        supplementZero(data.getDate()) + ' '+ // 日\n        supplementZero(data.getHours()) + ':'+ // 时\n        supplementZero(data.getMinutes()) + ':'+// 分\n        supplementZero(data.getSeconds())// 秒\n        return dataTime\n    },\n    pagination(data,callback){\n        return {\n            onChange: ()=>{\n                callback()\n            },\n\n        };\n    }\n}","export default {\n    baseURL: 'https://www.easy-mock.com/mock/5c175bee55d50372367850fd/mockapi',//mock 的数据url\n}","import JsonP from 'jsonp';\nimport Axio from 'axios';\nimport config from '../utils/config'\nimport { Modal } from 'antd';\nexport default class Axios{\n    static jsonp(option){\n        return new Promise((resolve,reject)=>{\n            JsonP(option.url,{\n                param: 'callback'\n            },((err,response)=>{\n                console.log(err)\n                console.log(response)\n                if(response.status===\"success\"){\n                    resolve(response)\n                }else{\n                    reject(err)\n                }\n            }))            \n        })\n    }\n\n    static ajax(option){\n        return new Promise((resolve,reject)=>{\n            Axio({\n                url    : option.url,\n                method : option.method||'get',\n                baseURL: config.baseURL,\n                timeout: 5000,\n                params : (option.data && option.data.params)||'',\n            }).then(res=>{\n                if(res.status===200){\n                    if(res.data.code===0){\n                        resolve(res.data)\n                    }else{\n                        Modal.info({\n                            title  : '错误提示',\n                            content: res.data.msg\n                        })\n                    }\n                }else{\n                    reject(res.data)\n                }\n            })\n        })\n    }\n}","import React from 'react';\nimport './index.less'\nimport { Row, Col } from 'antd';\nimport Util from '../../utils/utils';\nimport axios from './../../axios/index.js';\nimport {NavLink} from 'react-router-dom';\nexport default class Headers extends React.Component{\n    constructor(Props){\n        super()\n        this.state = {\n        }\n    }\n\n    componentWillMount(){\n        let _this = this;\n        _this.setState({\n            userName: 'jinjinjin',\n        })\n        this.timer = setInterval(function(){\n            let sysTime = Util.formateDate(new Date().getTime())\n            _this.setState({\n                sysTime: sysTime,\n            })\n        },1000)\n        this.getWeatherAPIDate()\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.timer);\n    }\n\n    getWeatherAPIDate(){\n        let _this = this;\n        let city  = '北京'\n        axios.jsonp({\n            url: `http://api.map.baidu.com/telematics/v3/weather?location=${encodeURIComponent(city)}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\n        })\n        .then(res=>{\n            if(res.status===\"success\"){\n                let data = res.results[0].weather_data[0];\n                _this.setState({\n                    weatherDetail: data.weather+data.temperature,\n                    dayPictureUrl: data.dayPictureUrl,\n                })\n            }\n            console.log(res)\n        })\n    }\n\n    render(){\n        return (\n            <div className=\"header\">\n                <Row className=\"header-top\">\n                    <Col span={24}>\n                        <span>欢迎！，{this.state.userName}</span>\n                        <NavLink to='/login'>退出</NavLink>\n                    </Col>\n                </Row>\n                <Row className=\"breadcrumb\">\n                    <Col span={4} className=\"breadcrumb-title\">首页</Col>\n                    <Col span={20} className=\"weather\">\n                        <span className=\"date\">{this.state.sysTime}</span>\n                        <span className=\"weather-img\">\n                            <img src={this.state.dayPictureUrl} alt=\"\"/>\n                        </span>\n                        <span className=\"weather-detail\">\n                            {this.state.weatherDetail}\n                        </span>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport './index.less'\n\nexport default class Footer extends React.Component{\n    constructor(Props){\n        super()\n    }\n    render(){\n        return (\n            <div className=\"footer\">\n                xxxxxjinjinjin的测试项目\n            </div>\n        )\n    }\n}","const menuList = [\n    {\n        title: '首页',\n        key  : '/admin/home'\n    },\n    {\n        title   : 'UI',\n        key     : '/admin/ui',\n        children: [\n            {\n                title: '按钮',\n                key  : '/admin/ui/buttons',\n            },\n            {\n                title: '弹框',\n                key  : '/admin/ui/modals',\n            },\n            {\n                title: 'Loading',\n                key  : '/admin/ui/loadings',\n            },\n            {\n                title: '通知提醒',\n                key  : '/admin/ui/notification',\n            },\n            {\n                title: '全局Message',\n                key  : '/admin/ui/messages',\n            },\n            {\n                title: 'Tab页签',\n                key  : '/admin/ui/tabs',\n            },\n            {\n                title: '图片画廊',\n                key  : '/admin/ui/gallery',\n            },\n            {\n                title: '轮播图',\n                key  : '/admin/ui/carousel',\n            }\n        ]\n    },\n    {\n        title   : '表单',\n        key     : '/admin/form',\n        children: [\n            {\n                title: '登录',\n                key  : '/admin/form/login',\n            },\n            {\n                title: '注册',\n                key  : '/admin/form/reg',\n            }\n        ]\n    },\n    {\n        title   : '表格',\n        key     : '/admin/table',\n        children: [\n            {\n                title: '基础表格',\n                key  : '/admin/table/basic',\n            },\n            {\n                title: '高级表格',\n                key  : '/admin/table/high',\n            }\n        ]\n    },\n    {\n        title: '富文本',\n        key  : '/admin/rich'\n    },\n    {\n        title: '城市管理',\n        key  : '/admin/city'\n    },\n    {\n        title  : '订单管理',\n        key    : '/admin/order',\n        btnList: [\n            {\n                title: '订单详情',\n                key  : '/admindetail'\n            },\n            {\n                title: '结束订单',\n                key  : '/adminfinish'\n            }\n        ]\n    },\n    {\n        title: '员工管理',\n        key  : '/admin/user'\n    },\n    {\n        title: '车辆地图',\n        key  : '/admin/bikeMap'\n    },\n    {\n        title   : '图标',\n        key     : '/admin/charts',\n        children: [\n            {\n                title: '柱形图',\n                key  : '/admin/charts/bar'\n            },\n            {\n                title: '饼图',\n                key  : '/admin/charts/pie'\n            },\n            {\n                title: '折线图',\n                key  : '/admin/charts/line'\n            },\n        ]\n    },\n    {\n        title: '权限设置',\n        key  : '/admin/permission'\n    },\n];\nexport default menuList;","import React from 'react';\nimport './index.less';\nimport MenuConfig from '../../config/menuConfig'\nimport { Menu, } from 'antd';\nimport {NavLink} from 'react-router-dom'\nconst SubMenu = Menu.SubMenu;\n// const MenuItemGroup = Menu.ItemGroup;\nexport default class NavLft extends React.Component{\n    constructor(Props){\n        super()\n        this.state = {\n            MenuTreeNode: []\n        }\n    }\n    // render 执行前\n    componentWillMount(){\n        const MenuTreeNode = this.renderMenu(MenuConfig)\n        console.log(MenuTreeNode)\n        this.setState({\n            MenuTreeNode: MenuTreeNode\n        }) \n    }\n    // 菜单渲染\n    renderMenu = (data)=>{\n        return data.map((item) => {\n            if(item.children){\n                return (\n                    <SubMenu key={item.key} title={item.title}>\n                        {this.renderMenu(item.children)}\n                    </SubMenu>\n                )\n            }\n            return (\n                <Menu.Item key={item.key}>\n                    <NavLink to={item.key}>{item.title}</NavLink>\n                </Menu.Item>\n            )\n        })\n    }\n\n    handleClick = (e) => {\n        console.log('click ', e);\n    }\n    render(){\n        return (\n            <div>\n                <div className=\"logo\">\n                    <img src=\"/assets/logo-ant.svg\" alt=\"\"/>\n                    <h1>Imooc MS</h1>\n                </div>\n                <Menu\n                theme = \"dark\"\n                // onClick         = {this.handleClick}\n                // style           = {{ width: 256 }}\n                // defaultOpenKeys = {['sub1']}\n                // selectedKeys    = {[this.state.current]}\n                // mode            = \"inline\"\n                >\n                {/* {MenuTreeNode.map((res,inbdex)=>{\n                    <SubMenu key={res.key} title={<span><Icon type=\"mail\" /><span>{res.title}</span></span>}>\n                        <Menu.Item key=\"1\">Option 1</Menu.Item>\n                    </SubMenu>\n                \n                })} */}\n               {this.state.MenuTreeNode}\n               \n                {/* <SubMenu key=\"sub2\" title={<span><Icon type=\"appstore\" /><span>Navigtion Two</span></span>}>\n                    <Menu.Item key=\"5\">Option 5</Menu.Item>\n                    <Menu.Item key=\"6\">Option 6</Menu.Item>\n                    <SubMenu key=\"sub3\" title=\"Submenu\">\n                    <Menu.Item key=\"7\">Option 7</Menu.Item>\n                    <Menu.Item key=\"8\">Option 8</Menu.Item>\n                    </SubMenu>\n                </SubMenu>\n                <SubMenu key=\"sub4\" title={<span><Icon type=\"setting\" /><span>Navigation Three</span></span>}>\n                    <Menu.Item key=\"9\">Option 9</Menu.Item>\n                    <Menu.Item key=\"10\">Option 10</Menu.Item>\n                    <Menu.Item key=\"11\">Option 11</Menu.Item>\n                    <Menu.Item key=\"12\">Option 12</Menu.Item>\n                </SubMenu> */}\n                </Menu>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Row, Col } from 'antd';\nimport Headers from './components/Headers';\nimport Footer from './components/Footer';\nimport NavLeft from './components/NavLeft';\nimport './style/common.less';\nexport default class Main extends React.Component{\n    constructor(Props){\n        super()\n    }\n    render(){\n        return <div>\n            <Row className=\"container\">\n                <Col span={3} className=\"nav-left\">\n                    <NavLeft/>\n                </Col>\n                <Col span={21} className=\"main\">\n                    <Headers/>\n                    <Row className=\"content\">\n                        {this.props.children}\n                    </Row>\n                    <Footer className=\"footer\"/>\n                </Col>\n            </Row>\n        </div>\n    }\n}","import React from 'react';\nimport './index.less';\n\nexport default class Login extends React.Component{\n    render(){\n        return (\n            <div className=\"home-wrap\">\n                登陆\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './index.less';\n\nexport default class Home extends React.Component{\n    render(){\n        return (\n            <div className=\"home-wrap\">\n                你是最胖的苏威黄\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './index.less';\nimport { Card,Button,Radio } from 'antd';\n\nexport default class Buttons extends React.Component{\n    state = {\n        loading   : true,\n        buttonSize: 'small'\n    }\n    noLoading = ()=>{\n        this.setState({\n            loading: false\n        })\n    }\n    YeLoading = ()=>{\n        this.setState({\n            loading: true\n        })\n    }\n    onChangeButtonSize=(e)=>{\n        this.setState({\n            buttonSize: e.target.value\n        })\n    }\n    render(){\n        return (\n            <div>\n                <Card title=\"基础按钮\" className=\"card-wrap\">\n                    <Button type=\"primary\">主按钮</Button>\n                    <Button >普通主按钮</Button>\n                    <Button type=\"dashed\">虚线按钮</Button>\n                    <Button type=\"danger\">警告按钮</Button>\n                    <Button disabled>警用按钮</Button>\n                </Card>\n                <Card title=\"图形按钮\" className=\"card-wrap\">\n                    <Button icon=\"plus\">创建</Button>\n                    <Button icon=\"edit\">编辑</Button>\n                    <Button icon=\"delete\">删除</Button>\n                    <Button shape=\"circle\" icon=\"search\"></Button>\n                    <Button type=\"primary\" icon=\"search\">搜索</Button>\n                    <Button type=\"primary\" icon=\"download\">下载</Button>\n                </Card>\n                <Card title=\"Loading按钮\" className=\"card-wrap\">\n                    <Button type=\"primary\" loading={this.state.loading}>确定</Button>\n                    <Button type=\"primary\" loading={this.state.loading} shape=\"circle\"></Button>\n                    <Button loading={this.state.loading} onClick={this.YeLoading}>点击加载</Button>\n                    <Button loading={this.state.loading} shape=\"circle\"></Button>\n                    <Button type=\"primary\" onClick={this.noLoading}>关闭</Button>\n                </Card>\n                <Card title=\"按钮组\" className=\"card-wrap\">\n                    <Button.Group>\n                        <Button type=\"primary\" icon=\"left\">返回</Button>\n                        <Button type=\"primary\" icon=\"right\">前进</Button>\n                    </Button.Group>\n                </Card>\n                <Card title=\"按钮尺寸\" className=\"card-wrap\">\n                    <Radio.Group value={this.state.buttonSize} onChange={this.onChangeButtonSize}>\n                        <Radio value=\"small\">小</Radio>\n                        <Radio value=\"default\">中</Radio>\n                        <Radio value=\"large\">大</Radio>\n                    </Radio.Group>\n                    <Button type=\"primary\" size={this.state.buttonSize}>主按钮</Button>\n                    <Button size={this.state.buttonSize}>普通主按钮</Button>\n                    <Button type=\"dashed\" size={this.state.buttonSize}>虚线按钮</Button>\n                    <Button type=\"danger\" size={this.state.buttonSize}>警告按钮</Button>\n                </Card>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './index.less';\n\nexport default class NoMatch extends React.Component{\n    render(){\n        return (\n            <div className=\"no-found\">\n                404 No Found!\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './index.less';\nimport { Card,Button, Modal } from 'antd';\n\nexport default class Models extends React.Component{\n    state = {\n        showModel1: false,\n        showModel2: false,\n        showModel3: false,\n        showModel4: false,\n    }\n\n    handleOpen = (type)=>{\n        this.setState({\n            [type]: true\n        })   \n    }\n\n    handleConfirm = (type)=>{\n        Modal[type]({\n            title        : 'Are you sure delete this task?',\n            content      : 'Some descriptions',\n            okText       : 'Yes',\n            okType       : 'danger',\n            okButtonProps: {\n            //   disabled: true,\n            },\n            cancelText: 'No',\n            onOk() {\n              console.log('OK');\n            },\n            onCancel() {\n              console.log('Cancel');\n            },\n        })\n    }\n    render(){\n        return (\n            <div>\n                <Card title=\"基础模态框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('showModel1')}>open</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('showModel2')}>自定义页面</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('showModel3')}>顶部20px模态框</Button>\n                </Card>\n                <Card title=\"信息确认模态框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('confirm')}>confirm</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('success')}>success</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('error')}>error</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('info')}>info</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('warning')}>info</Button>\n                </Card>\n                <Modal\n                    title    = \"React\"\n                    visible  = {this.state.showModel1}\n                    onCancel = {()=>{\n                        this.setState({\n                            showModel1: false\n                        })\n                    }}\n                >\n                    <p>少年，你吃早饭了吗</p>\n                </Modal>\n                <Modal\n                    title      = \"自定义\"\n                    visible    = {this.state.showModel2}\n                    okText     = \"好的\"\n                    cancelText = \"算了\"\n                    onCancel   = {()=>{\n                        this.setState({\n                            showModel2: false\n                        })\n                    }}\n                >\n                    <p>我是自定义自定义</p>\n                </Modal>\n                <Modal\n                    visible  = {this.state.showModel3}\n                    style    = {{top:20}}\n                    onCancel = {()=>{\n                        this.setState({\n                            showModel3: false\n                        })\n                    }}\n                >\n                    <p>顶部</p>\n                </Modal>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './index.less';\nimport { Card, Spin, Icon, Alert  } from 'antd';\n\nexport default class Loadings extends React.Component{\n    state = {\n       \n    }\n\n    render(){\n        const icon = <Icon type=\"loading\"/>\n        return (\n            <div>\n                <Card title=\"Spin的用法\" className=\"card-wrap\">\n                    <Spin className=\"mr-2\"/>\n                    <Spin className=\"mr-2\" size=\"large\"/>\n                    <Spin className=\"mr-2\" size=\"small\"/>\n                    <Spin className=\"mr-2\" size=\"default\"/>\n                    <Spin className=\"mr-2\" size=\"default\" indicator={icon} spinning={true}/>\n                </Card>\n                <Card title=\"内容遮罩\" className=\"card-wrap\">\n                    <Spin spinning={true} tip=\"加载中...\">\n                        <Alert\n                            message     = \"React\"\n                            description = \"你吃午饭了吗\"\n                            type        = \"success\"\n                        ></Alert>\n                    </Spin>\n                </Card>\n                <Card title=\"内容遮罩\" className=\"card-wrap\">\n                    <Spin spinning={true} indicator={icon} tip=\"加载中...\">\n                        <Alert\n                            message     = \"React\"\n                            description = \"你吃午饭了吗\"\n                            type        = \"success\"\n                        ></Alert>\n                    </Spin>\n                </Card>\n        \n            </div>\n        )\n    }\n}","import React from 'react';\nimport './index.less';\nimport { Card,Button,notification } from 'antd';\n\nexport default class NoTice extends React.Component{\n    state = {\n    }\n    openNotice = (type,placement)=>{\n        const arr = {\n            message    : '你吃早饭了吗',\n            description: '你吃个啥了呢'\n        }\n        if(placement){\n            notification.config({\n                placement: placement\n            })\n        }\n        notification[type](arr)\n    }\n    render(){\n        return (\n            <div>\n                <Card title=\"通知提醒框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={()=>this.openNotice('success')}>success</Button>\n                    <Button type=\"primary\" onClick={()=>this.openNotice('info')}>info</Button>\n                    <Button type=\"primary\" onClick={()=>this.openNotice('error')}>error</Button>\n                    <Button type=\"primary\" onClick={()=>this.openNotice('warning')}>warning</Button>\n                </Card>\n                <Card title=\"通知提醒框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={()=>this.openNotice('success','topLeft')}>上左</Button>\n                    <Button type=\"primary\" onClick={()=>this.openNotice('info','topRight')}>上右</Button>\n                    <Button type=\"primary\" onClick={()=>this.openNotice('error','bottomLeft')}>下左</Button>\n                    <Button type=\"primary\" onClick={()=>this.openNotice('warning','bottomRight')}>下右</Button>\n                </Card>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './index.less';\nimport { Card,Button,message } from 'antd';\n\nexport default class Message extends React.Component{\n    state = {\n    }\n    openMessage = (type)=>{\n        message[type](type)\n    }\n    render(){\n        return (\n            <div>\n                <Card title=\"全局提示框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={()=>this.openMessage('success')}>success</Button>\n                    <Button type=\"primary\" onClick={()=>this.openMessage('info')}>info</Button>\n                    <Button type=\"primary\" onClick={()=>this.openMessage('error')}>error</Button>\n                    <Button type=\"primary\" onClick={()=>this.openMessage('warning')}>warning</Button>\n                    <Button type=\"primary\" onClick={()=>this.openMessage('loading')}>loading</Button>\n                </Card>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './index.less';\nimport { Card,Tabs,message, Icon } from 'antd';\nconst TabPane = Tabs.TabPane;\n\nexport default class Tabss extends React.Component{\n    state = {\n        tabList: [\n            {\n                title  : 'tab1',\n                content: '123',\n                id     : 0,\n                type   : 'plus'\n            },\n            {\n                title  : 'tab2',\n                content: '456',\n                id     : 1,\n                type   : 'edit'\n            },\n            {\n                title  : 'tab3',\n                content: '789',\n                id     : 2,\n                type   : 'delete'\n            },\n        ]\n    }\n    callback = (key)=>{\n        message.info(key)\n    }\n    onChange = (ActiveKey)=>{\n        this.setState({\n            ActiveKey\n        })\n    }\n    render(){\n        return (\n            <div>\n                <Card title=\"tab页签\" className=\"card-wrap\">\n                    <Tabs defaultActiveKey=\"1\" onChange={this.callback}>\n                        <TabPane tab=\"Tab 1\" key=\"1\">123</TabPane>\n                        <TabPane tab=\"Tab 2\" key=\"2\" disabled>456</TabPane>\n                        <TabPane tab=\"Tab 3\" key=\"3\">789</TabPane>\n                    </Tabs>\n                </Card>\n                <Card title=\"tab带图页签\" className=\"card-wrap\">\n                    <Tabs defaultActiveKey=\"1\" onChange={this.callback}>\n                        <TabPane tab={<span><Icon type=\"plus\"/>增加</span>} key=\"1\">123</TabPane>\n                        <TabPane tab={<span><Icon type=\"edit\"/>修改</span>} key=\"2\">456</TabPane>\n                        <TabPane tab={<span><Icon type=\"delete\"/>删除</span>} key=\"3\">789</TabPane>\n                    </Tabs>\n                </Card>\n                <Card title=\"tab带图页签循环\" className=\"card-wrap\">\n                    <Tabs \n                            defaultActiveKey = \"1\"\n                            type             = \"editable-card\"\n                            onChange         = {this.onChange}>\n                        {\n                            this.state.tabList.map((res)=>{ \n                                return <TabPane tab={res.type} key={res.id}>{res.content}</TabPane>\n                            })\n                        }\n                    </Tabs>\n                </Card>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './index.less';\nimport {NavLink} from 'react-router-dom'\nimport { Card, Form, Input, Button,message, Icon, Checkbox } from 'antd';\n\nclass FormLogin extends React.Component{\n    handlSubmit = ()=>{\n        console.log(this.props.form.getFieldsValue())\n        this.props.form.validateFields((err,values)=>{\n            console.log(err)\n            if(!err){\n                console.log(values)\n                message.success('你通过了')\n            }else{\n                message.error('你失败了')\n            }\n        })\n    }\n    render(){\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <div>\n                <Card title=\"登陆行内表单\" className=\"card-wrap\">\n                    <Form layout=\"inline\">\n                        <Form.Item>\n                            <Input placeholder=\"请输入用户名\"/>\n                        </Form.Item>\n                        <Form.Item>\n                            <Input placeholder=\"请输入密码\"/>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\">登陆</Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n                <Card title=\"登陆水平表单\" className=\"card-wrap\">\n                    <Form style={{width: 300}}>\n                        <Form.Item>\n                            {\n                                getFieldDecorator('userName',{\n                                    initialValue: 'jack',\n                                    rules       : [\n                                        {\n                                            required: true,\n                                            message : '用户名不能为空'\n                                        },\n                                        {\n                                            pattern: /^\\w/g,\n                                            message: '用户名必须为英文字母或者数字'\n                                        }\n                                    ],\n                                })(\n                                    <Input prefix={<Icon type=\"user\"/>} placeholder=\"请输入用户名\"/>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item>\n                            {\n                                getFieldDecorator('password',{\n                                    initialValue: 'password',\n                                    rules       : [\n                                        {\n                                            required: true,\n                                            message : '密码不能为空'\n                                        }\n                                    ],\n                                })(\n                                    <Input prefix={<Icon type=\"lock\"/>} type=\"password\" placeholder=\"请输入密码\"/>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item>\n                            {\n                                getFieldDecorator('remember',{\n                                    valuePropName: 'checked',\n                                    initialValue : true,\n                                })(\n                                    <Checkbox>记住密码</Checkbox>\n                                )\n                            }\n                            <NavLink to=\"/\" style={{float: \"right\"}}>忘记密码</NavLink>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" onClick={this.handlSubmit}>登陆</Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n        )\n    }\n}\nexport default Form.create()(FormLogin)","import React from 'react';\nimport {NavLink} from 'react-router-dom'\nimport './index.less';\nimport { Card, Form, Input, Button,message, Radio, InputNumber, Select, Switch,DatePicker, TimePicker,Upload,Icon,Checkbox} from 'antd';\nimport moment from 'moment'\n\nconst FormItem  = Form.Item;\nclass FromRegister extends React.Component{\n    state = {\n        loading: false,\n      };\n\n    handleSubmit = ()=>{\n        console.log(this.props.form.getFieldsValue())\n        this.props.form.validateFields((err,values)=>{\n            console.log(err)\n            if(!err){\n                console.log(values)\n                message.success('你通过了')\n            }else{\n                message.error('你失败了')\n            }\n        })\n    }\n    getBase64=(img, callback)=> {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n      }\n    beforeUpload =(file)=> {\n        const isJPG = file.type === 'image/jpeg';\n        if (!isJPG) {\n          message.error('You can only upload JPG file!');\n        }\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n          message.error('Image must smaller than 2MB!');\n        }\n        return isJPG && isLt2M;\n      }\n      handleBeforeUpload = (info) => {\n        let _this = this\n        if (info.file.status === 'uploading') {\n          this.setState({ loading: true });\n          return;\n        }\n        if (info.file.status === 'done') {\n          // Get this url from response in real world.\n          this.getBase64(info.file.originFileObj, imageUrl => _this.setState({\n            imageUrl,\n            loading: false,\n          }));\n        }\n      }\n    render(){\n        const minRows = {\n            minRows: 4\n        }\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 4 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 12 },\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n                xs: {\n                    span  : 24,\n                    offset: 4,\n                },\n                sm: {\n                    span  : 16,\n                    offset: 4,\n                },\n            },\n        };\n        \n        const { getFieldDecorator } = this.props.form;\n        const uploadButton          = (\n            <div>\n              <Icon type={this.state.loading ? 'loading' : 'plus'} />\n              <div className=\"ant-upload-text\">Upload</div>\n            </div>\n          );\n        return (\n            <div>\n                <Card title=\"注册表单\" className=\"card-wrap\">\n                    <Form layout=\"horizontal\">\n                        <Form.Item\n                            label = \"用户名\"\n                            {...formItemLayout}\n                        >\n                            {\n                                getFieldDecorator('userName',{\n                                    initialValue: '',\n                                    rules       : [\n                                        {\n                                            required: true,\n                                            message : '用户名不能为空'\n                                        },\n                                        {\n                                            pattern: /^\\w/g,\n                                            message: '用户名必须为英文字母或者数字'\n                                        }\n                                    ],\n                                })(\n                                    <Input placeholder=\"请输入用户名\"/>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item\n                            label = \"密码\"\n                            {...formItemLayout}\n                        >\n                            {\n                                getFieldDecorator('password',{\n                                    initialValue: '',\n                                    rules       : [\n                                        {\n                                            required: true,\n                                            message : '密码不能为空'\n                                        },\n                                    ],\n                                })(\n                                    <Input placeholder=\"请输入密码\"/>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item\n                            label = \"性别\"\n                            {...formItemLayout}\n                        >\n                            {\n                                getFieldDecorator('sex',{\n                                    initialValue: '1',\n                                    rules       : [\n                                        {\n                                            required: true,\n                                            message : '性别不能为空'\n                                        },\n                                    ],\n                                })(\n                                    <Radio.Group>\n                                        <Radio value=\"1\">男</Radio>\n                                        <Radio value=\"2\">女</Radio>\n                                    </Radio.Group>\n                                )\n                            }\n                        </Form.Item>\n                        <FormItem\n                            label = \"年龄\"\n                            {...formItemLayout}\n                        >\n                            {\n                                getFieldDecorator('ages',{\n                                    initialValue: '18',\n                                    rules       : [\n                                        {\n                                            required: true,\n                                            message : '年龄不能为空'\n                                        },\n                                    ],\n                                })(\n                                    <InputNumber></InputNumber>\n                                )\n                            }\n                        </FormItem>\n                        <Form.Item\n                            label = \"当前状态\"\n                            {...formItemLayout}\n                        >\n                            {\n                                getFieldDecorator('state',{\n                                    initialValue: '1',\n                                })(\n                                    <Select>\n                                        <Select.Option value=\"1\">单身</Select.Option>\n                                        <Select.Option value=\"2\">妻妾成群</Select.Option>\n                                        <Select.Option value=\"3\">老汉</Select.Option>\n                                        <Select.Option value=\"4\">前端狗</Select.Option>\n                                    </Select>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item\n                            label = \"爱好\"\n                            {...formItemLayout}\n                        >\n                            {\n                                getFieldDecorator('interest',{\n                                    initialValue: ['1','2','3','9'],\n                                })(\n                                    <Select mode=\"tags\">\n                                        <Select.Option value=\"1\">游泳</Select.Option>\n                                        <Select.Option value=\"2\">跑步</Select.Option>\n                                        <Select.Option value=\"3\">开车</Select.Option>\n                                        <Select.Option value=\"4\">篮球</Select.Option>\n                                        <Select.Option value=\"5\">足球</Select.Option>\n                                        <Select.Option value=\"6\">桌球</Select.Option>\n                                        <Select.Option value=\"7\">麦霸</Select.Option>\n                                        <Select.Option value=\"8\">电脑游戏</Select.Option>\n                                        <Select.Option value=\"9\">dota</Select.Option>\n                                    </Select>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item\n                            label = \"是否已结婚\"\n                            {...formItemLayout}\n                        >\n                            {\n                                getFieldDecorator('isMarried',{\n                                    valuePropName: 'checked',\n                                    initialValue : true,\n                                })(\n                                    <Switch/>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item\n                            label = \"生日\"\n                            {...formItemLayout}\n                        >\n                            {\n                                getFieldDecorator('birthday',{\n                                    initialValue: moment('2018-12-07'),\n                                })(\n                                    <DatePicker\n                                        showTime\n                                        format = \"YYYY-MM-DD HH:mm:ss\"\n                                    />\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item\n                            label = \"联系地址\"\n                            {...formItemLayout}\n                        >\n                            {\n                                getFieldDecorator('address',{\n                                    initialValue: '北京市',\n                                })(\n                                    <Input.TextArea\n                                        autosize = {\n                                            minRows\n                                        }\n                                    />\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item\n                            label = \"早起时间\"\n                            {...formItemLayout}\n                        >\n                            {\n                                getFieldDecorator('time')(\n                                    <TimePicker/>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item\n                            label = \"头像\"\n                            {...formItemLayout}\n                        >\n                            {\n                                getFieldDecorator('userImg')(\n                                    <Upload\n                                    name           = \"avatar\"\n                                    listType       = \"picture-card\"\n                                    className      = \"avatar-uploader\"\n                                    showUploadList = {false}\n                                    action         = \"//jsonplaceholder.typicode.com/posts/\"\n                                    beforeUpload   = {this.beforeUpload}\n                                    onChange       = {this.handleBeforeUpload}\n                                  >\n                                    {this.state.imageUrl ? <img src={this.state.imageUrl} alt=\"avatar\" /> : uploadButton}\n                                  </Upload>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item\n                            {...tailFormItemLayout}\n                        >\n                            {\n                                getFieldDecorator('xieyi',{\n                                    initialValue: true,\n                                })(\n                                    <Checkbox>我以及阅读过 <NavLink to='/'>xxx的协议</NavLink></Checkbox>\n                                )\n                            }\n                        </Form.Item>\n                        \n                        <Form.Item\n                             {...tailFormItemLayout}\n                        >\n                            <Button type=\"primary\" onClick={this.handleSubmit}>注册</Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n        )\n    }\n}\nexport default Form.create()(FromRegister)","import React from 'react';\nimport {Card,Table} from 'antd'\nimport axios from '../../axios/index'\nexport default class Tables extends React.Component{\n\n    constructor(Props){\n        super(Props)\n        this.state={\n            dataSource     : [],\n            dataSourceList : [],\n            selectdeItem   : [],\n            selectedRowKeys: [],\n        }\n    }\n\n\n    componentDidMount(){\n        this.setState({\n            dataSource: [\n                {\n                    name   : 't',\n                    age    : 15,\n                    address: '河北',\n                    key    : 1\n                }\n            ]\n        })\n        this.getList()\n    }\n\n    getList = ()=>{\n        let that = this;\n        axios.ajax({\n            method: 'get',\n            url   : '/table/list',\n        }).then(res=>{\n            if(res.code===0){\n                res.data.list.map((item,index)=>{\n                    item.key = index\n                })\n                that.setState({\n                    dataSourceList: res.data.list\n                })\n            }\n        })\n    }\n\n    onRowClick = (record,index)=>{\n        let selectedRowKeys = [index]\n        this.setState({\n            selectdeItem   : record,\n            selectedRowKeys: selectedRowKeys,\n        })\n    }\n    onSelectChange = (selectedRowKeys) => {\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\n        this.setState({ selectedRowKeys });\n      }\n    \n    onSelect1 = (record,index)=>{\n        let selectedRowKeys = this.state.selectedRowKeys\n        // console.log(selectedRowKeys.push(index))\n        // console.log(selectedRowKeys)\n        console.log(record)\n        console.log(index)\n    }\n\n    render(){\n        const columns = [{\n            title    : 'ID',\n            dataIndex: 'id',\n            key      : 'id',\n        },{\n            title    : '姓名',\n            dataIndex: 'name',\n            key      : 'name',\n        }, {\n            title    : '年龄',\n            dataIndex: 'age',\n            key      : 'age',\n            render   : (age)=>{\n                if(age>50){\n                    return '太老了'\n                }\n                return age\n            }\n        }, {\n            title    : '住址',\n            dataIndex: 'address',\n            key      : 'address',\n        }];\n        const rowSelection = {\n            type           : 'checkbox',\n            selectedRowKeys: this.state.selectedRowKeys,\n            onChange       : this.onSelectChange,\n        }\n        const rowSelectionA = {\n            type           : 'radio',\n            selectedRowKeys: this.state.selectedRowKeys,\n        }\n        return (\n            <div>\n                <Card title=\"基础表格\" className=\"card-wrap\">\n                    <Table\n                        pagination = {false}\n                        size       = \"middle\"\n                        dataSource = {this.state.dataSource} columns = {columns} />\n                </Card>\n                <Card title=\"动态数据表格\" className=\"card-wrap\">\n                    <Table\n                        pagination = {false}\n                        size       = \"middle\"\n                        dataSource = {this.state.dataSourceList} columns = {columns} />\n                </Card>\n                <Card title=\"mock-多选\" className=\"card-wrap\">\n                    <Table\n                        pagination   = {false}\n                        rowSelection = {rowSelection}\n                        size         = \"middle\"\n                        dataSource   = {this.state.dataSourceList} columns = {columns} />\n                </Card>\n                <Card title=\"mock-单选\" className=\"card-wrap\">\n                    <Table\n                        pagination   = {false}\n                        rowSelection = {rowSelectionA}\n                        onRow        = {(record,index)=>{\n                            return {\n                                onClick: ()=>{  \n                                    this.onRowClick(record,index)\n                                },\n                                onSelect: ()=>{\n                                    this.onSelect1(record,index)\n                                },\n                            }\n                        }}\n                        size       = \"middle\"\n                        dataSource = {this.state.dataSourceList} columns = {columns} />\n                </Card>\n                <Card title=\"mock-分页\" className=\"card-wrap\">\n                    <Table\n                        pagination   = {true}\n                        rowSelection = {rowSelectionA}\n                        size         = \"middle\"\n                        dataSource   = {this.state.dataSourceList} columns = {columns} />\n                </Card>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from './App'\nimport Main from './main';\nimport Login from './page/login';\nimport Home from './page/home';\nimport Buttons from './page/ui/buttons';\nimport NoMatch from './page/nomatch';\nimport Models from './page/ui/models';\nimport Loadings from './page/ui/loadings';\nimport NoTice from './page/ui/notice';\nimport Message from './page/ui/message';\nimport Tabss from './page/ui/tabs';\nimport FormLogin from './page/form/login';\nimport FromRegister from './page/form/register';\nimport Tables from './page/table/basicTable';\n\nexport default class IRouter extends React.Component{\n    render(){\n        return (\n            <Router>\n                <App>\n                    <Switch>\n                        <Route path='/login' component={Login}></Route>\n                        <Route path='/admin' render={()=>\n                            <Main>\n                                <Switch>\n                                    <Route path='/admin/home' component={Home}></Route>\n                                    <Route path='/admin/ui/buttons' component={Buttons}></Route>\n                                    <Route path='/admin/ui/modals' component={Models}></Route>\n                                    <Route path='/admin/ui/loadings' component={Loadings}></Route>\n                                    <Route path='/admin/ui/notification' component={NoTice}></Route>\n                                    <Route path='/admin/ui/messages' component={Message}></Route>\n                                    <Route path='/admin/ui/tabs' component={Tabss}></Route>\n                                    <Route path='/admin/form/login' component={FormLogin}></Route>\n                                    <Route path='/admin/form/reg' component={FromRegister}></Route>\n                                    <Route path='/admin/table/basic' component={Tables}></Route>\n                                    <Route component={NoMatch}></Route>\n                                </Switch>\n                            </Main>\n                        }></Route>\n                        {/* <Route path='/order/detail' component={login}></Route> */}\n                    </Switch>    \n                </App>\n            </Router>\n        )\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import Main from './main';\nimport IRouter from './router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<IRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}